//* RootUI by ReliQ Arts
//* rootui.reliqarts.com
//* Licensed under MIT Open Source


$rem-base: 14px !default;


// Strip-unit - Strips the unit of measure and returns it
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

// Clamp - Restrict number between min and max values. 
// ie. ff value > max: max | if value < min: min
@function clamp($value, $min, $max) {
  @return if($value > $max, $max, if($value < $min, $min, $value));
}


// Calculate element attribute percentage relative to parent. 
@function calc-perc($target, $parent) {
	@return ($target / $parent) * 100%;
} 

// Convert to rem
@function conv-rem($size, $base-value: $rem-base) {
  	$rem: ( strip-unit($size) / strip-unit($base-value) ) * 1rem;
  	@if $rem == 0rem { $rem: 0; }
  	@return $rem;
}


// Calculate REM - Adopted from Foundation

// New Syntax, allows to optionally calculate on a different base value to counter compounding effect of rem's.
// Call with 1, 2, 3 or 4 parameters, 'px' is not required but supported:
// 
//   calc-rem(10 20 30px 40);
// 
// Space delimited, if you want to delimit using comma's, wrap it in another pair of brackets
// 
//   calc-rem((10, 20, 30, 40px));
// 
// Optionally call with a different base (eg: 8px) to calculate rem.
// 
//   calc-rem(16px 32px 48px, 8px);
// 
// If you require to comma separate your list
// 
//   calc-rem((16px, 32px, 48), 8px);

@function calc-rem($values, $base-value: $rem-base) {
  $max: length($values);

  @if $max == 1 { @return conv-rem(nth($values, 1), $base-value); }

  $remValues: ();
  @for $i from 1 through $max {
    $remValues: append($remValues, conv-rem(nth($values, $i), $base-value));
  }
  @return $remValues;
}


// Ranges - Adopted from Foundation
// We use these functions to define ranges for various things, like media queries. 
@function lower-bound($range){
  @if length($range) <= 0 {
    @return 0;
  }
  @return nth($range,1);
}

@function upper-bound($range) {
  @if length($range) < 2 {
    @return 999999999999;
  }
  @return nth($range, 2);
}